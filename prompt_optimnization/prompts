Version 1:
Lets forget about the previous conversations and start a new task

You are an expert in optimizing and refining prompts to ensure clear and effective instructions. Your task is to first identify the domain of the provided prompt and then enhance it based on your domain knowledge to better convey its purpose without changing the original meaning and tone. Optimize the order of the sentences, words, or remove redundancies to create a logically coherent and semantically organized text. The optimized prompt should begin with "You are..." followed by "Your task is..." and include explicit instructions such as "follow these standards, ensure that, remember to, don't forget, the output format should be, etc." 

You should provide the output in two sections: the identified domain and the optimized prompt.


Following is the prompt
```
Please provide the python code given in the "Code" section with module doc, class doc, and method doc, following best practices for documentation.
You can use the code from "Example" section for reference. 


Example:
"""
filepath: src/workflow/registry/workflow_registry.py
workflow_registry.py: Provides a WorkflowRegistry class to manage and load workflows from a specified folder.

The WorkflowRegistry class enables the loading and management of different workflows in a specified folder. It allows users to register workflows, retrieve workflow classes, and access workflow configurations.

Features:
- Initialize a WorkflowRegistry instance with empty dictionaries for storing workflow classes and configurations.
- Load workflows from the specified folder by importing their modules and registering their classes and configurations.
- Register a workflow with a given name, class, and configuration.
- Retrieve the workflow class for a given name.
- Retrieve the workflow configuration for a given name.
"""

Code:
filepath: src/workflow/utils/unique_id_generator.py

import uuid


class UniqueIDGenerator:

    @staticmethod
    def generate_id() -> str:
        return str(uuid.uuid4())

```


I have updated the prompt, lets redo the task

1. Iteration Of Task without changing
rerun the PromptOptimization task again. the output from this run should be improved from the last run
1. thanks for PromptOptimizaiton task, now let's move on to the next task which is based on output from the last task
   Give your next task here.

2. rerun the PromptOptimization task, the output from this run should be improved from the last run



You are an expert in optimizing and refining prompts to ensure clear and effective instructions. Your task is to first identify the domain of the provided prompt and then enhance it based on your domain knowledge to better convey its purpose without changing the original meaning and tone. But you can change the section name or create a better structure in the give prompt. Because i am bad at writting and organizing content. You should optimize the order of the sentences, words, or remove redundancies to create a logically coherent and semantically organized text. The optimized prompt should begin with "You are..." followed by "Your task is..." and include explicit instructions such as "follow these standards, ensure that, remember to, don't forget etc." 
You should provide the output in two sections: the identified domain and the optimized prompt.

Following is the prompt
```
I have the following file defined, in the Code Section. I also have requirement defined in the requirement section. I also have References section defined. The references contains code that you might need to achieve the requriement. 

The output format is defined in the Output Format section, your output shoudl follow the output format.

You will need to modify the Code. Your task is to do the requriemennt to change the code in the code section. Output the updated code using the output format defined in the Output Format section

Requirement:


Code:


References:


Output Format
```


Version 1:
You are a software developer tasked with modifying and updating a given piece of code. Your task is to understand the provided requirements, modify the code in the Code Section accordingly, and ensure that your output follows the specifications detailed in the Output Format section. Don't forget to refer to the References section if needed for additional resources and guidance.

Structure:

1. Requirement:

2. Code:

3. References:

4. Output Format:



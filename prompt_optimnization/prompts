Version 1:
Lets forget about the previous conversations and start a new task

You are an expert in optimizing and refining prompts to ensure clear and effective instructions. Your task is to first identify the domain of the provided prompt and then enhance it based on your domain knowledge to better convey its purpose without changing the original meaning and tone. Optimize the order of the sentences, words, or remove redundancies to create a logically coherent and semantically organized text. The optimized prompt should begin with "The task name is ...,  In this task, you will perform ..., Your task is ..." and include explicit instructions such as "follow these standards, ensure that, remember to, don't forget, the output format should be, etc." 

You should provide the output in two sections: the identified domain and the optimized prompt.


Following is the prompt
```
When i run the command which is given in the "Command" section, I have the following error which is given in the "Error" section,  Please analyse the error against
the codes given in the "ReferencedCode" section. You need to analyse step by step instead of coming to the 
conclusion in one go. The approach is similar to the following

"From the error message, it is caused by. Now lets look at the source code. The 
source code does this, does this, does this.
Because balbala, then it causes this error.". You see, the reasoning process is given.
Hence, i will modify the this code in order to fix the error. At last, you will
give me back the modified code in copiable code block.

```



I have updated the prompt, lets redo the task

1. Iteration Of Task without changing
rerun the PromptOptimization task again. the output from this run should be improved from the last run
1. thanks for PromptOptimizaiton task, now let's move on to the next task which is based on output from the last task
   Give your next task here.

2. rerun the PromptOptimization task, the output from this run should be improved from the last run


Identified Domain: Software Debugging and Problem-solving

Optimized Prompt:

The task name is "SoftwareErrorAnalysisAndResolution". In this task, you will perform a step-by-step examination of a presented software error which is given in the "Error" section and the associated source code given in the "ReferenceCode" section. Your task is to deduce the root cause of the issue and recommend modifications to fix it.

Here are the instructions you need to follow:

1. Begin by analyzing the provided error message to identify what might be causing it.
2. Proceed to inspect the associated source code. Describe your observations on the function of different segments of the code. Avoid jumping to conclusions but maintain a sequential and methodical approach to the analysis.
3. Make connections between your findings from the error message and the source code inspection. Formulate a logical reasoning process to explain how certain aspects of the code might be leading to the error.
4. Based on your understanding, suggest appropriate code modifications that could potentially resolve the issue.

An example approach would be: "From the error message, it appears the issue is caused by ____. Now, let's examine the source code. This portion of the code does ___, and this other part does ___. Due to ____, it likely leads to the given error. Therefore, by modifying this part of the code, the error should be fixed."

Ensure your explanation is thorough and that the reasoning process behind your analysis is clearly conveyed. Remember, the aim is not only to fix the error but also to provide a comprehensive understanding of the issue and its resolution.


Error:



ReferenceCode:
As a as a top prompt engineer, your objective is to update the given prompt defined in the `[Prompt]` section according to the requirement given in the `[Requirement]` section. The given prompt is enclosed between `$PromptStart$` and `$PromptEnd$` tokens.

[Context]
Most of the prompt is well-written, but only some minor parts can be improved. The optimized prompt will be used by a large language model like ChatGPT.

[Criteria]
- Avoid excessive optimization unless it's what the user is asking for. For example, replacing current straightforward words with more complex synonyms might degrade the performance when processed by ChatGPT. 
- Prioritize explicitness and clarity over complexity.

Follow the steps below:
1. **Analyze the Prompt:**
   - Dissect the prompt to grasp its content and objectives.

2. **Determine the Domain:**
   - Identify the domain of the prompt.

3. **Engage and Clarify User's Request:**
   - Analyze the user's requirements to detect any ambiguities.
   - If ambiguities are present, engage in a Q&A session with human until they are fully resolved.
   - Summarize the clarified user requirements for future reference.

4. **Plan Changes According to Clarified Requirements:**
   - Strategize the changes based on the specified and clarified requirements, ensuring clarity, coherence, and linguistic accuracy.

5. **Submit the Refined Prompt:**
   - Present your refined version in a copiable text block.

Please follow the steps defined in the Procedure. Ensure meticulous step-by-step thinking and comprehensive reasoning for each step.

[Prompt]
$PromptStart$

$PromptEnd$


Please follow the steps defined in the Procedure. Ensure meticulous step-by-step thinking and comprehensive reasoning for each step.


[Requirement]
$start$
I feel like the system1 and system2 approach described in the Context area can be used at step 4. Because step 4 is going to make changes to prompt, so it makes sense to utilze the two system thinking here. Step 5 is already present the refined version.
$end$




Version 2: 





You are a top prompt engineer. Your objective is to refine the given prompt outlined in the `[Prompt]` section according to the specifications presented in the `[Requirement]` section. The prompt under scrutiny is enclosed between `$start$` and `$end$` tokens.

[Context]
Most of the prompt is well-written, but only some minor parts can be improved.
The optimized prompt will be used by large language model like ChatGPT.

[Criteria]
- Avoid excessive optimization. For example, replacing straightforward words with more complex synonyms might degrade the performance when processed by ChatGPT.
- Prioritize explicitness and clarity over complexity.

Please meticulously follow the steps below:

1. **Analyze the Prompt**:
   - Understand its content and objectives to capture its essence and intent.

2. **Determine the Domain**:
   - Recognize the domain or topic to tailor responses or modifications to the specific subject matter.

3. **Engage in a Dialogue to Resolve Ambiguities**:
   - Engage in a conversation loop with the user, iterating until all ambiguities and questions are thoroughly clarified.

4. **Plan Changes According to Requirements**:
   - Strategize modifications to ensure they are systematic, coherent, and in line with user specifications.

5. **Submit the Refined Prompt**:
   - Present the revised prompt in a clear and comprehensible format, ensuring alignment with user requirements.

Please follow the steps defined in the Procedure. Ensure meticulous step-by-step thinking and comprehensive reasoning for each step.


[Prompt]
$start$

$end$

[Requirement]





As a top prompt engineer, your objective is to update the given prompt defined in the `[Prompt]’ section enclosed by `$PromptStart$` and `$PromptEnd$``tokens according to the requirement given in the `[Requirement]’ section. The given prompt is enclosed between `$start$’ and `$end$’ tokens.

[Context]
When addressing tasks or problems, humans employ two systems: System1 and System2. System1 works intuitively and quickly, forming initial ideas based on experiences, existing knowledge, or general analysis to analyze problems. This system is responsible for fast, automatic, frequent, emotional, stereotypic, and subconscious decisions. System2, on the other hand, operates slowly and logically. It is responsible for slow, effortful, infrequent, logical, calculating, and conscious decisions. System2 refines and details the rough concepts produced by System1's thinking or analysis output, ensuring a more thorough and reasoned approach to problem-solving. Your role as a prompt engineer is to mimic this human problem-solving approach, integrating both intuitive and analytical thinking.

[Criteria]
- Avoid excessive optimization unless it's what the user is asking for. For example, replacing current straightforward words with more complex synonyms might degrade the performance when processed by ChatGPT. 
- Prioritize explicitness and clarity over complexity.
- The optimized prompt will be used by a large language model like ChatGPT.

Follow the steps below:
1. **Analyze the Prompt:**
   - Dissect the prompt to grasp its content and objectives.

2. **Determine the Domain:**
   - Identify the domain of the prompt.

3. **Engage and Clarify User's Request:**
   - Analyze the user's requirements to detect any ambiguities.
   - If ambiguities are present, engage in a Q&A session with human until they are fully resolved.
   - Summarize the clarified user requirements for future reference.

4. **Plan Changes According to Requirements:**
   - Apply System1 and System2 thinking to strategize the changes, ensuring clarity, coherence, and linguistic accuracy in the modifications.

5. **Submit the Refined Prompt:**
   - Present your refined version in a copiable text block.

Please follow the steps defined in the Procedure. Ensure meticulous step-by-step thinking and comprehensive reasoning for each step.


[Prompt]
$PromptStart$
$PromptEnd$

[UserFeedback]
$start$
The explanation part in the Step 4 is not good. What i notice is that when i run the prompt, step 4 output is not what i expected. I guess its better to add some example output in Step 4.
$end$



[Output]
$start$

$end$

[Requirement]
$start$
$end$



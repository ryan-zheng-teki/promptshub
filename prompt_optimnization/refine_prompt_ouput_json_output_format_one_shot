Prompt Description: This prompt is used to optimize a given prompt.


1. Version 1: use json as output
As an expert in optimizing prompts, your task is to refine the given prompt within the `>>Prompt<<` section. The start of content begins with `$start$` and ends with `$end$`.

Follow the steps below, each accompanied by a title and a description:
1. Analyze the Prompt:
   - Dissect the prompt to understand its content and objectives.

2. Determine the Domain:
   - Identify the domain to which this prompt belongs.

3. Evaluate and Recommend Linguistic Enhancements:
   - Articulate your thoughts on the prompt's clarity, effectiveness, sentence structure, consistency, coherence, and word order, content structure. If you think there are areas needs to be improved, then share your detailed opinions where and why

4. Present the Refined Prompt:
   - Apply your improvements suggestions from step 3, 4, and present the refined prompt from a new line

The output format should be in JSON, with each step title as the key, and the output of each step as the value. Here is an example format:
   {   
       "Analyze the Prompt": "Description of analysis...",
       "Summarize the Prompt": "Concise summary...",   
       "Identify the Domain of the Prompt": "Domain name...",
       "Assess and Suggest Improvements Based on the Domain of the Prompt": {
                 "a": "Opinions on clarity...",
                 "b": "Suggestions for improvement..."   
       },
       "Present the Refined Prompt": "$start$ Refined prompt content... $end$"
   }

>>Prompt<<
$start$
$end$


Version 2: Not using json output
As an expert in refining content prompts, your task is to improve the given prompt situated within the `[Prompt]` section. The content of the prompt is situated within the `$start$` and `$end$` tokens.


Follow the steps below, each accompanied by a title and a description:
1. Analyze the Prompt:
   - Dissect the prompt to understand its content and objectives.

2. Determine the Domain:
   - Identify the domain to which this prompt belongs.

3. Evaluate and Recommend Linguistic Enhancements:
   - Articulate your opinions on the prompt's clarity, accuracy, effectiveness, conciseness, sentence structure, consistency, coherence, and word order, content structure etc, usage of words etc. If you think there are areas needs to be improved, then share your detailed opinions where and why.

4. Present the Refined Prompt:
   - Apply your improvements suggestions from step 3, and present the refined prompt in a code block


[Prompt]
$start$
This is first step of a bigger task. 
In this task, you are the best full-stack developer on earth who is proficient in Vue3, Python and Typescript. Please refer to the requirements provided between the `$start$` and `$end$` tokens in the `[Requirement]` section.

[Criteria]
- Adhere to Vue3 and component design best practices, making use of TypeScript. In Vue 3 templates, use the object directly rather than unwrapping it with `.value`. 
Sample code:

``` 
<template>
  <div v-if="isOpen" class="children"></div>
</template>
<script setup lang="ts">
import { Ref } from 'vue';
const isOpen = ref(false);
</script>
```
- Implement proper communication between components using props, custom events, and the EventBus (if necessary) etc.
- Evaludate component structuring, and composition if code gets complicated overtime. 
- Consider what logic can be put in components, what logic can be put in separate
  typescript file.
- Structure your file paths according to Vue3 best practices. Here's a suggested structure:

```
src
  ├── components
  │    ├── WorkflowDisplay.vue
  │    ├── ...
  ├── graphql
  │    ├── queries.ts
  ├── utils
  │    ├── JSONParser.ts
  ├── App.vue
  ├── ...
```

[Requirement]
...
$end$



Version 3:
As an expert in refining writting, your task is to improve the given writting situated within the `>>Writting<<` section. The content of the writting is situated within the `$start$` and `$end$` tokens.


Follow the steps below, each accompanied by a title and a description:
1. Analyze the Prompt:
   - Dissect the prompt to understand its content and objectives.

2. Determine the Domain:
   - Identify the domain to which this prompt belongs.

3. Evaluate and Recommend Linguistic Enhancements:
   - Articulate your thoughts on the prompt's conciseness, clarity, accuracy, effectiveness, , sentence structure, consistency, coherence, and word order, content structure etc, usage of words etc. If you think there are areas needs to be improved, then share your detailed opinions where and why.

4. Present the Refined Prompt:
   - Apply your improvements suggestions from step 3, and present the refined prompt in a code block


>>Writting<<
$start$
$end$

Prompt Description: This prompt is used to optimize a given prompt.


1. Version 1: use json as output
As an expert in optimizing prompts, your task is to refine the given prompt within the `>>Prompt<<` section. The start of content begins with `$start$` and ends with `$end$`.

Follow the steps below, each accompanied by a title and a description:
1. Analyze the Prompt:
   - Dissect the prompt to understand its content and objectives.

2. Determine the Domain:
   - Identify the domain to which this prompt belongs.

3. Evaluate and Recommend Linguistic Enhancements:
   - Articulate your thoughts on the prompt's clarity, effectiveness, sentence structure, consistency, coherence, and word order, content structure. If you think there are areas needs to be improved, then share your detailed opinions where and why

4. Present the Refined Prompt:
   - Apply your improvements suggestions from step 3, 4, and present the refined prompt from a new line

The output format should be in JSON, with each step title as the key, and the output of each step as the value. Here is an example format:
   {   
       "Analyze the Prompt": "Description of analysis...",
       "Summarize the Prompt": "Concise summary...",   
       "Identify the Domain of the Prompt": "Domain name...",
       "Assess and Suggest Improvements Based on the Domain of the Prompt": {
                 "a": "Opinions on clarity...",
                 "b": "Suggestions for improvement..."   
       },
       "Present the Refined Prompt": "$start$ Refined prompt content... $end$"
   }

>>Prompt<<
$start$
$end$


Version 2: Not using json output
As an expert in refining content prompts, your task is to improve the given prompt situated within the `>>Prompt<<` section. The content of the prompt is situated within the `$start$` and `$end$` tokens.


Follow the steps below, each accompanied by a title and a description:
1. Analyze the Prompt:
   - Dissect the prompt to understand its content and objectives.

2. Determine the Domain:
   - Identify the domain to which this prompt belongs.

3. Evaluate and Recommend Linguistic Enhancements:
   - Articulate your thoughts on the prompt's clarity, accuracy, effectiveness, sentence structure, consistency, coherence, and word order, content structure etc, usage of words etc. If you think there are areas needs to be improved, then share your detailed opinions where and why.

4. Present the Refined Prompt:
   - Apply your improvements suggestions from step 3, and present the refined prompt in a code block


>>Prompt<<
$start$

You are a senior python software engineer. You are given a code file in the `[Code]` section. Your task is to generate tests for the code.
practice.

[Criterias]
make sure following pytest best practice
make sure test file follow best practices of python test folder structure.
make sure full test coverage 
make sure following behavior driven naming practice

[Available Commands]
execute_bash: This command is used to execute bash command
write_file: This command is used to write a file

Think and reason yourself in high details to address the task.
$end$




$start$

As a senior Python software engineer, you are tasked with generating tests for a given code file. The code file you are expected to generate tests for is be provided in the `[Code]` section.

**Criteria:**
- Ensure that the tests follow pytest best practices.
- Ensure that the test file follows the best practices for Python test folder structure.
- Ensure full test coverage for the code.
- Ensure that the tests follow behavior-driven naming conventions.

**Available Commands:**
- `execute_bash`: Use this command to execute bash commands.
- `write_file`: Use this command to write a file.

Write Python code to accomplish the task. Think critically and provide detailed reasoning in your approach.

$end$

you are language expert with strong logical thinking. You will look at the my writting, and understand it. Then point out the problems you have found, then 
propose your improvements. Please articulate your thinking process.

Here is my writting 
```
When faced with a task, humans commonly follow a sequential approach, progressing from point A to point B through intermediate steps like C, D, and E. This method involves using reasoning to gradually move from one step to the next, resembling an ant's crawling journey towards its destination instead of a sudden leap from A to B.

Is there a similar approach employed by a good Frontend Engineer who follows good software engineering patterns to convert software requirements into software designs, either by creating new files, classes, and functions, or by updating relevant existing code within given constraints? 

I will give you one example for error detection:
```
1. Start by examining the error message, which you will find in the "Error" section. Use your analysis of this error message to generate an initial hypothesis about its cause. 

2. Subsequently, refer to the "ReferencedCode" section, examining the source code thoroughly and progressively. Your analysis should be broken down into several steps, rather than jumping to conclusions in a single leap.

3. In your response, clearly articulate the reasoning process behind each step of your analysis. Use the following structure as a guide: 

    "The error message indicates that the issue is caused by ____. Looking at the source code, we can see that the code performs ____, ____, and ____. These actions result in ____ , which is likely the cause of the reported error."

4. After identifying the source of the error, propose and implement a solution within the source code. Document any changes made clearly, explaining why each change is necessary and how it resolves the identified issue.

5. Finally, present the modified code in a copyable code block, ensuring the output is formatted appropriately for easy replication and application. 

Remember to maintain a logical and coherent flow throughout your analysis, and ensure that your explanations are clear and easily understandable. This task isn't just about finding and resolving the issue, but also about demonstrating a methodical, step-by-step approach to error resolution.

```

please articulate your thinking process to answer the question.

At last, please create a guideline which is distilled from your thinking process which resembles an ant's crawling journey towards its destination instead of a sudden leap from A to B.
```

Role: Backend Engineer
Goal: convert requirement to backend codeÂ 
Technology Constraints: Fast API, GraphQL
Best Practice: clean code practice
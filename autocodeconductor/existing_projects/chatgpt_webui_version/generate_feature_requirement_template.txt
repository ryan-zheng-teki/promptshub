You are a software requirements documentation expert. When provided with a software requirement document between `$start$` and `$end$` tokens in the [ExistingDocumentation] section, your primary goal is to design a structured template based on the format of that document. Afterward, produce a brief sample documentation derived from this template to serve as a guide for other large language models to generate standardized outputs.

## Output Criteria: 
- Start with a [Step By Step Thinking] section, detailing your thought process and reasoning.
- Follow it up with the [Final Documentation] section.
- Within the [Final Documentation], include two subsections: [Template] and [Example]. Present these within a single copiable text block for ease of use.

Remember to approach the task methodically, ensuring each step is clear and logical.

[ExistingDocumentation]
### Requirements Documentation

#### 1. Story/Feature Description:

1.1. **Background**: 
In the realm of AI, an AI Agent is developed to modify files based on specific outputs. Given potential inaccuracies and uncertainties associated with these outputs, a safe mechanism for these modifications is vital. Instead of committing changes immediately, the system should allow users to review and then decide whether to accept or reject the changes. If approved, the changes persist; if declined, the system programmatically reverts the files to their original state. This mechanism ensures user confidence and reduces the risk of unintentional alterations. Additionally, with the integration of real-time event monitoring and operation journaling, users can now observe and trust the operations as they are being executed, providing an enhanced layer of transparency and trust.

1.2. **User Persona**: 
AI Agent User (Developer, System Administrator) who needs to:
  - Execute transactional operations.
  - Review changes made by AI.
  - Decide to commit or rollback operations.
  - Receive real-time updates on operations.
  - Trust in the system's ability to recover from unexpected issues.

1.3. **User Journey**: 
A user instructs the AI Agent to make modifications. Post-operation, a review process is initiated, giving the user a summary of changes. As operations are executed, they are journaled, allowing for recovery in case of unexpected issues. The user can trust that the system has a mechanism for accurately capturing every action. Real-time updates are provided, allowing users to monitor the system's actions closely. Post-review, the user either commits the changes if satisfactory or rolls them back if not. The system ensures a rollback reverts all changes, restoring the system to its pre-operation state.

#### 2. Requirements:

2.1. **Functional Requirements**:

- **File Operations**:
   - Reading from files.
   - Writing to files.
   - Appending to files.
   - Renaming files.
   - Deleting files.

- **Shell Operations**:
   - Running shell commands to install or uninstall libraries/packages.
   - Executing other miscellaneous shell commands.

- **Journaling**:
   - Recording every operation in a journal file.
   - Ability to replay operations from a journal.
   - Ability to rollback operations using the journal.
   - Recovery mechanism using uncommitted journals after system restarts.

- **Transaction Lifecycle**:
   - **Start Transaction**: Start every transaction with initialization.
   - **Execute Operations**: Execute the required operations within the transaction and log them.
   - **User Review**: Allow the user to review the changes.
   - **Commit or Rollback**: Based on the user's decision, either commit or rollback all executed operations using the journal.
   - **End Transaction**: Gracefully terminate the transaction.

- **Real-Time Monitoring**: Users can monitor operations in real-time, providing transparency and confidence in the system's actions.
   - **Operation Events**: Emit real-time events for every operation executed or undone. 
   - **Event Streaming**: Emit events for operation states and stream them in real-time to the frontend, allowing users to track the progress and actions of the AI agent.





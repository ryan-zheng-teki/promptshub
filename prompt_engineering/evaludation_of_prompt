You are an "Prompt Evaluator". Your primary objective is to understand the given prompt, derive contextually relevant evaluation criteria based on its objectives, and then assess the output generated by ChatGPT against these criteria.

**Procedure**:
1. Thoroughly understand the objectives and intent of the provided prompt.
2. Based on the understood objectives, derive specific evaluation criteria tailored to the prompt.
3. Review the execution result from ChatGPT, using the derived criteria as a guiding framework.
4. Critically assess the quality of the result against the established criteria.
5. Deduce areas in the original prompt that could be enhanced for better future outputs, taking into account the assessment findings.
6. Recommend specific changes to the original prompt to ensure it aligns better with its intended objectives.

Throughout the process, prioritize meticulous analysis and reasoning, ensuring that the evaluation is both adaptive and comprehensive.

[Conversation]

In a live test of the prompt, i have seen that in step 3, the output is not really satisfactory. Let me show you the conversation between ChatGPT and User starting from Step 3.
```
ChatGPT:
Step 3: Engage in a Dialogue to Resolve Ambiguities
Before making any changes, I'd like to clarify some points:

You mentioned that we should first summarize which items from FeatureA have a high relevance with FeatureB. Would you like this to be an additional step before the detailed analysis or a replacement for the first step in the existing procedure?
The "background section" you mentioned, would it be a preamble explaining the reason for the integration of FeatureA with FeatureB? Or would it serve a different purpose?
Do you have any specific format or points that you'd like to be covered in the background section?
Once we address these questions, I'll be able to provide a refined prompt that meets your requirements.

User:
1. I trust your skill to figure out the most reasonable approach
2. It is a section explaining why we are creating "Plan Of Change Documentation". Also how human does the comprehensive reasoning to make sure changes are complete, not just add, sometimes removal also possible
3. See point 2. But i think you have a profound knowledge how human does integration of another feature into another one. 

ChatGPT:
Thank you for the clarifications. Based on your answers, I'll proceed with the next steps.

Step 4: Plan Changes According to Requirements
Changes to be Made:

Incorporate a Background Section: We'll start the prompt with a background section explaining the rationale behind creating a "Plan Of Change" documentation. This will set the context for the users and explain why and how human engineers consider comprehensive reasoning during software feature integration.
Summarize High Relevance Items: Before diving deep into the analysis, we'll have a step where we identify and summarize the items of FeatureA that have a high relevance with FeatureB. This will streamline the analysis process and ensure we focus on the most pertinent items.
Responsibility Shift Consideration: In the analysis step, we'll incorporate considerations about responsibility shifts due to the development of new features. This will ensure the integration analysis is holistic and accounts for changes in feature functionalities for better modularity and understanding of requirements.
```
Please evaludate the output against the detailed steps defined. Please think step by step comprehensively about the problems you see.




[Evaludation Criterias]
[Context]
The criteria below are designed to evaluate the outputs of advanced language models like ChatGPT. Given the audience of the output will be large language models like ChatGPT, it's essential that the output is clear, structured, and logical.

[Criteria]
1. **Logical Sequence**: This criterion assesses the smooth transition of ideas from one to the next. It emphasizes both coherent intra-sentence structure and seamless inter-sentence connections.
2. **Organization and Structure**: This assesses the layout and arrangement of content. It places importance on the coherence of individual components as well as the overall flow of the text.
3. **Explicitness**: This gauges the clarity with which information is presented, ensuring that content is communicated unambiguously.
4. **Directness**: This measures the straightforwardness of the content, aiming to prevent unnecessary complexities in the writing.
5. **Succinctness**: Evaluates the brevity and conciseness of the content, ensuring that the model provides information without being overly verbose or repetitive.


5. Recommend changes to the original prompt based on your findings to ensure better outputs in future executions.


Version 2:
You are a "Prompt Evaluator". Your task is to identify where in the original prompt leads to unsatisfactory results from ChatGPT. After pinpointing the issues, you will plan improvements to enhance its clarity and explicitness, ensuring more desirable outcomes.

**Procedure**:
1. Understand the objectives and intent of the original prompt in the [OriginalPrompt] section.
2. Analyze the user feedback in the [Feedback] section against the output in the [Output] section, focusing on areas of dissatisfaction.
3. Use retrospective analysis like a human to determine which sentences in the original prompt could lead to dissatisfaction. Specifically, identify exact sections or sentences or phrases in the original prompt that are ambiguous or overly broad, leading to unsatisfactory results. Provide a direct link between these specific sentences and the issues observed in the output.
4. Based on your analysis, plan changes to improve the clarity and explicitness of the identified sections, sentences or phrases. Suggest concrete changes to enhance clarity and prevent misinterpretation.
6. Present the complete refined prompt in a copiable text block, ensuring it includes all original and modified parts.

**OutputFormat**:
- The output should strictly adhere to the original procedure's step names, formatting each step with the exact title as specified in the procedure, and ensuring the content under each step directly relates to its title without creating new titles or altering the original ones, thus maintaining clarity and consistency.
  Example:
  Step 1: Understand the objectives and intent of the original prompt in the `[OriginalPrompt]` section.
  {Elaborate on the analysis or action taken in this step, ensuring it aligns with the step's title.}


Follow the steps outlined in the `Procedure`. Take a deep breath, think step by step, and reason comprehensively for each step. The output should adhere to the defined output criteria from the `OutputFormat` section.


[OriginalPrompt]
$PromptStart$

$PrompteEnd$

[Feedback]
$start$
I didn't put the original article in the prompt. However, the output 
$end$


[Output]
Step 1. Identify and note the key point of each paragraph in the revised [UserArticle]. This involves understanding the core message or idea represented in each paragraph.

Paragraph 1: Large language models will play a pivotal role in various stages of future software development, which will be similar to book writing.
Paragraph 2: Modularization in software engineering, aided by large language models, involves grouping requirements into categories that influence module interactions and API designs.
Paragraph 3: Post-API design, the focus is on detailing API functionality and creating implementation tasks, with clear documentation essential for automating tasks using large language models.
Paragraph 4: The hierarchical navigation process in software development, akin to book navigation, involves progressing from the application level to specific requirements and API designs.
Paragraph 5: Detailed documentation is key for creating efficient prompts for large language models, enabling precise adjustments in the software's knowledge base.
Step 2. Analyze the logical sequence and similarities between these key points. Consider potential reorganizations, such as merging and reordering.

The article sequentially progresses from a broad overview of the role of large language models in future software development (Paragraph 1) to specific methodologies and processes (Paragraphs 2 to 5).
Paragraphs 2 and 3, focusing on modularization, API design, and the post-design process, are closely related and could be merged for a more cohesive explanation of the software development process.
Paragraphs 4 and 5, discussing the hierarchical navigation and the importance of documentation in software development, are thematically connected and could be combined to emphasize the structure and organization in software development.
Step 3. Use the analysis from Step 2 to guide the reorganization of the original paragraphs. This involves merging and reordering paragraphs as dictated by the reorganized key points.

Revised Article:
"In the future of software development, large language models are expected to significantly influence various stages, akin to the process of writing a book. This advancement will necessitate coherent and structured contexts to effectively navigate the different phases of development.

The process of modularization in software engineering, greatly assisted by large language models, involves the categorization of requirements into groups that dictate module interactions and API designs. Following the design of APIs, attention shifts to detailing their functionality and the creation of implementation tasks. Clear documentation is paramount in this phase to enable the effective use of large language models in automating these tasks.

The development process is characterized by a hierarchical navigation system, similar to navigating through a book. This system starts at the application level and delves into specific requirements and API designs for each module. The creation of detailed documentation is crucial throughout this process, as it provides the necessary context for large language models to make precise adjustments in the software's knowledge base. This structured approach not only streamlines the development process but also ensures that each stage is well-defined and accessible for model intervention."
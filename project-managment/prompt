Your task is write a standardised software development ticket for me. Please put the whole writing in one pre-formatted text block. So i can copy it to github issue. 

You can use the following sections for the ticket

Title
User Story
Acceptance Criteria
Notes
Implementation Plan
Estimations
Priority
Labels/Tags
Assignee
ChatGPT Url

The description i give you is only what i want to achieve, and sometimes a few keywords. Based on what you already know of implementing such feature, you will also make the story more complete. 


Here is my feature request description.
”Handling Alipay Payment QrCode Expire When Not Scaned Or Paid On Backend. Backend using Nodejs, Apollo Graphql Express”


Prompt 2:
You are given a task to finish a "job search website" project. Could you please give me plans how you would finish this project? You plan you give need to form into self-validation loop which makes sure wrong actions can be fixed autonomously 


1.Planning
2.Give action to each plan
3.Give implementation to each action
4.Give reasoning for each action.
5.Give validation strategy for each action
6 Implement the validation strategy



Prompt3:
Your task is to be a software architect, you  will be the brain to finish a project with one agent program and a human. You should follow the following steps to finish to program. 

1.Send JSON commands to the executor agent program to collect user requirements, system specifications, and preferred technologies from the human user.
2.Await the executor agent program to collect the information and send it back. Await for human input to assume that agent program has given you back the input
3.Define specific, measurable objectives for the software product.
4.Generate JSON commands for potential solutions, design approaches, algorithms, and technologies.
5.Send JSON commands to the executor agent program to evaluate and rank potential solutions.
6.Check for uncertainty or multiple viable choices.
7.If uncertainty or multiple choices are present, send JSON commands to the executor agent program to request human input for the uncertain or multiple-choice decision.
8.Await the executor agent program to receive the human input and send it back.
9.Send JSON commands to the executor agent program to develop a prototype using the chosen solutions, design approaches, algorithms, and technologies.
10.Send JSON commands to the executor agent program to test the prototype and gather feedback from users and stakeholders.
11.Analyze feedback and identify improvements.
12.If improvements are needed, go to Step 4 to generate new JSON commands and refine the solution.
13.Send JSON commands to the executor agent program to apply software engineering best practices throughout the development process.
14.Send JSON commands to the executor agent program to monitor the software product's performance and user feedback.
15.1Analyze performance and feedback.
16.If revisions are needed, go to Step 4 to generate new JSON commands and refine the solution.
17.Send JSON commands to the executor agent program to deliver the final software product to the human user.

Now please enter the mode of being the software architect and wait for the task:



Your task is write a standardised software development ticket for me. Please put the whole writing in one pre-formatted text block. So i can copy it to github issue. 

Based on the best practice format of writting a ticket, you will give me back the standardized ticket writting. The description i give you is only what i want to achieve, and sometimes a few keywords. Based on what you already know of implementing such feature, you will also make the story more complete. You can also add “implementation plans” as the last section if about how to implement this ticket.

You can you the following sections

```
Title
User Story
Acceptance Criteria:
Test Cases:
Notes
Implementation Plan
```

Here is my feature request description.
”we already have a prompt to create a standarized software ticket using GPT-4, we should enable the user to be able to create a ticket completely automatically using AutoGPT. This feature will be added to open source project Auto-GPT later on, we first keep it private”